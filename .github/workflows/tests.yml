name: WasmVM Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  main-package-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run main package tests
        run: |
          go test -v ./... -run "^Test(IBC|AnalyzeCode|StoreCode|SimulateStoreCode|StoreCodeAndGet|RemoveCode|HappyPath|Env|GetMetrics|LongPayloadDeserialization|CreateChecksum)$"

  api-contract-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run API contract tests
        run: |
          go test -v ./internal/api -run "^Test(Instantiate|Execute|ExecutePanic|ExecuteUnreachable|ExecuteCpuLoop|ExecuteStorageLoop|ExecuteUserErrorsInApiCalls|Migrate|MultipleInstances|Sudo)$"

  api-iterator-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run API iterator tests
        run: |
          go test -v ./internal/api -run "^Test(StoreIterator|QueueIterator|RetrieveIterator)"

  api-cache-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run API cache tests
        run: |
          go test -v ./internal/api -run "^Test(InitAndReleaseCache|InitCache|InitLocking)"

  api-pin-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run API pin tests
        run: |
          go test -v ./internal/api -run "^Test(Pin|Unpin|GetMetrics|GetPinnedMetrics)"

  api-query-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run API query tests
        run: |
          go test -v ./internal/api -run "^Test(DispatchSubmessage|ReplyAndQuery|Query|HackatomQuerier|CustomReflectQuerier|Floats|LibwasmvmVersion)"

  types-serialization-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run types serialization tests
        run: |
          go test -v ./types -run "^Test(.*Serialization|.*JSON)$"

  types-data-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run types data tests
        run: |
          go test -v ./types -run "^Test(MessageInfo|BlockInfo|Delegation|Validator|QueryResult|ConfigJSON|ChecksumString)$"

  benchmarks:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run benchmarks
        run: |
          go test -v ./internal/api -run=^$ -bench=.
